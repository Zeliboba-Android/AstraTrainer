// –ò–∑–º–µ–Ω—è–µ–º –∫–ª—é—á–∏ localStorage –¥–ª—è –∏–∑–æ–ª—è—Ü–∏–∏ —É—Ä–æ–∫–æ–≤
const LESSON_STORAGE_PREFIX = 'lesson1_';

let lesson1Status = localStorage.getItem(LESSON_STORAGE_PREFIX + 'Status') || 'not-started';
const requiredCommands = ['cd Documents', 'mkdir MyFolder', 'ls'];
let completedCommands = JSON.parse(localStorage.getItem(LESSON_STORAGE_PREFIX + 'CompletedCommands')) || [];
let currentDirectory = localStorage.getItem(LESSON_STORAGE_PREFIX + 'CurrentDirectory') || '/';
let fileSystem = JSON.parse(localStorage.getItem(LESSON_STORAGE_PREFIX + 'FileSystem')) || {
  '/': ['Documents', 'file1.txt', 'file2.txt'],
  '/Documents': ['file3.txt', 'file4.txt']
};

function saveState() {
  localStorage.setItem(LESSON_STORAGE_PREFIX + 'CurrentDirectory', currentDirectory);
  localStorage.setItem(LESSON_STORAGE_PREFIX + 'FileSystem', JSON.stringify(fileSystem));
}
function createFireworks() {
  const colors = ['#ff0', '#f00', '#0f0', '#00f', '#fff'];
  const fireworksCount = 50;

  for (let i = 0; i < fireworksCount; i++) {
    const firework = document.createElement('div');
    firework.className = 'firework';

    // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
    const x = Math.random() * window.innerWidth;
    const y = window.innerHeight + 100;

    // –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∞–Ω–∏–º–∞—Ü–∏–∏
    const delay = Math.random() * 0.5;
    const duration = 1 + Math.random() * 0.5;

    firework.style.left = `${x}px`;
    firework.style.top = `${y}px`;
    firework.style.animationDelay = `${delay}s`;
    firework.style.animationDuration = `${duration}s`;
    firework.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];

    document.body.appendChild(firework);

    // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => firework.remove(), (duration + 1) * 1000);
  }
}


function showHint(hintId) {
  const hint = document.getElementById(hintId);
  hint.style.display = 'block';
}

function executeCommand() {
  const input = document.getElementById('command-input').value.trim();
  const output = document.getElementById('terminal-output');

  if (input === '') {
    return; // –ù–µ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∏—á–µ–≥–æ, –µ—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –ø—É—Å—Ç–∞—è
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –∫–æ–º–∞–Ω–¥—É –≤ –≤—ã–≤–æ–¥
  output.textContent += `\n> ${input}\n`;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
  const response = handleCommand(input);
  output.textContent += response + '\n';

  // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
  document.getElementById('command-input').value = '';

  // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª –≤–Ω–∏–∑
  output.scrollTop = output.scrollHeight;

  // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞
  updateLessonStatus(input);
}

function clearTerminal() {
  document.getElementById('terminal-output').textContent = 'Welcome to CLI Trainer!\nType "help" for a list of commands.';
}

function handleCommand(command) {
  let result = '';

  switch (command.toLowerCase()) {
    case 'help':
      result = 'Available commands: help, cd, mkdir, ls, clear';
      break;

    case 'cd documents':
      if (currentDirectory === '/') {
        currentDirectory = '/Documents';
        result = 'Changed directory to "Documents".';
      } else {
        result = 'Directory not found.';
      }
      break;

    case 'mkdir myfolder':
      if (currentDirectory === '/Documents') {
        if (!fileSystem['/Documents'].includes('MyFolder')) {
          fileSystem['/Documents'].push('MyFolder');
          result = 'Directory "MyFolder" created.';
        } else {
          result = 'Directory already exists.';
        }
      } else {
        result = 'You must be in "Documents" to create a directory here.';
      }
      break;

    case 'ls':
      result = fileSystem[currentDirectory].join('\n');
      break;

    case 'clear':
      result = '';
      break;

    default:
      result = `Command not found: ${command}`;
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–æ–º–∞–Ω–¥—ã
  saveState();
  return result;
}
function updateLessonStatus(command) {
  const normalizedCommand = command.trim().replace(/\s+/g, ' ').toLowerCase();
  const expectedIndex = completedCommands.length;

  if (expectedIndex >= requiredCommands.length) return;

  const expectedCommand = requiredCommands[expectedIndex].toLowerCase();

  if (normalizedCommand === expectedCommand) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –¥–ª—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∫–æ–º–∞–Ω–¥
    let isValid = true;

    switch (expectedCommand) {
      case 'cd documents':
        isValid = currentDirectory === '/Documents';
        break;
      case 'mkdir myfolder':
        isValid = fileSystem['/Documents'].includes('MyFolder');
        break;
      case 'ls':
        isValid = currentDirectory === '/Documents' &&
          fileSystem['/Documents'].includes('MyFolder');
        break;
    }

    if (isValid) {
      completedCommands.push(requiredCommands[expectedIndex]);
      localStorage.setItem('lesson1CompletedCommands', JSON.stringify(completedCommands));

      // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞
      if (lesson1Status === 'not-started') {
        lesson1Status = 'in-progress';
        localStorage.setItem('lesson1Status', lesson1Status);
      }

      if (completedCommands.length === requiredCommands.length) {
        lesson1Status = 'completed';
        localStorage.setItem('lesson1Status', lesson1Status);
        createFireworks();
        showCongratulations();
      }

      const statusElement = document.getElementById('lesson1-status');
      if (statusElement) {
        statusElement.textContent = lesson1Status === 'completed' ? 'Completed' : 'In Progress';
        statusElement.className = `status ${lesson1Status}`;
      }
    }
  }
}

function showCongratulations() {
  const congrats = document.createElement('div');
  congrats.textContent = 'üéâ Congratulations! Lesson Completed! üéâ';
  congrats.style.position = 'fixed';
  congrats.style.top = '50%';
  congrats.style.left = '50%';
  congrats.style.transform = 'translate(-50%, -50%)';
  congrats.style.fontSize = '2em';
  congrats.style.color = '#fff';
  congrats.style.textShadow = '0 0 10px #000';
  congrats.style.zIndex = '10000';
  congrats.style.animation = 'zoomInOut 4s forwards'; // –î–æ–±–∞–≤–∏–ª–∏ forwards
  congrats.style.pointerEvents = 'none'; // –ß—Ç–æ–±—ã —Ç–µ–∫—Å—Ç –Ω–µ –º–µ—à–∞–ª –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—é

  document.body.appendChild(congrats);

  // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
  setTimeout(() => {
    congrats.remove();
  }, 4000); // –í—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏
}
document.addEventListener('DOMContentLoaded', function() {
  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —É—Ä–æ–∫–∞
  currentDirectory = localStorage.getItem(LESSON_STORAGE_PREFIX + 'CurrentDirectory') || '/';
  fileSystem = JSON.parse(localStorage.getItem(LESSON_STORAGE_PREFIX + 'FileSystem')) || {
    '/': ['Documents', 'file1.txt', 'file2.txt'],
    '/Documents': ['file3.txt', 'file4.txt']
  };

  // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å —É—Ä–æ–∫–∞
  const statusElement = document.getElementById('lesson1-status');
  if (statusElement) {
    const savedStatus = localStorage.getItem('lesson1Status') || 'not-started';
    const completed = JSON.parse(localStorage.getItem('lesson1CompletedCommands')) || [];

    let displayStatus = savedStatus;
    if (completed.length === requiredCommands.length) {
      displayStatus = 'completed';
    } else if (completed.length > 0) {
      displayStatus = 'in-progress';
    }

    statusElement.textContent =
      displayStatus === 'completed' ? 'Completed' :
        displayStatus === 'in-progress' ? 'In Progress' : 'Not Started';
    statusElement.className = `status ${displayStatus}`;
  }
});
function resetLesson() {
  currentDirectory = '/';
  fileSystem = {
    '/': ['Documents', 'file1.txt', 'file2.txt'],
    '/Documents': ['file3.txt', 'file4.txt']
  };
  completedCommands = [];
  lesson1Status = 'not-started';

  // –£–¥–∞–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–∞–Ω–Ω—ã–µ —É—Ä–æ–∫–∞
  localStorage.removeItem(LESSON_STORAGE_PREFIX + 'CurrentDirectory');
  localStorage.removeItem(LESSON_STORAGE_PREFIX + 'FileSystem');
  localStorage.removeItem(LESSON_STORAGE_PREFIX + 'Status');
  localStorage.removeItem(LESSON_STORAGE_PREFIX + 'CompletedCommands');

  const statusElement = document.getElementById('lesson1-status');
  if (statusElement) {
    statusElement.textContent = 'Not Started';
    statusElement.className = 'status not-started';
  }

  clearTerminal();
}